{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TasksList.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","deadline","checked","handleText","e","setState","target","value","handleDate","handleCheckbox","handleClick","console","log","props","add","alert","enterPressed","event","keyCode","which","maxDate","this","className","icon","faStream","size","type","placeholder","onChange","onKeyPress","min","max","id","htmlFor","onClick","Component","Task","doneStyle","textDecoration","task","important","active","style","color","fontWeight","done","delete","TasksList","tasks","filter","activeList","map","key","doneList","length","faSort","faSearch","HomePage","counter","addTask","prevState","deleteTask","doneTask","forEach","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9f6cb75.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/AddTask.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStream, faSearch, faFilter, faSort } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n\r\n    state = {\r\n        text: '',\r\n        deadline: this.minDate,\r\n        checked: false,\r\n    }\r\n\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            deadline: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCheckbox = (e) => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        console.log('dodaj');\r\n\r\n        const { text, deadline, checked } = this.state;\r\n\r\n        if (this.state.text !== \"\") {\r\n            const add = this.props.add(text, deadline, checked);\r\n            if (add) {\r\n                this.setState({\r\n                    text: '',\r\n                    deadline: this.minDate,\r\n                    checked: false\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"Write a task name.\")\r\n        }\r\n    }\r\n\r\n    enterPressed = (event) => {\r\n        var code = event.keyCode || event.which;\r\n        if (code === 13) {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate = maxDate + \"-12-31\";\r\n\r\n        return (\r\n            <>\r\n                <div className=\"mainPanel\">\r\n                    <div className=\"wrap\">\r\n                        <FontAwesomeIcon icon={faStream} size=\"2x\" />\r\n                        <div>main panel</div>\r\n\r\n                        <div className=\"form\">\r\n                            <input type=\"text\" className=\"addTaskInput\" placeholder=\"add task\" onChange={this.handleText} value={this.state.text} onKeyPress={this.enterPressed} />\r\n\r\n                            <input type=\"date\" value={this.state.deadline} min={this.minDate} max={maxDate} onChange={this.handleDate} className=\"deadline\" onKeyPress={this.enterPressed} />\r\n\r\n                            <div className=\"wrapInsideForm\">\r\n                                <input onChange={this.handleCheckbox} type=\"checkbox\" checked={this.state.checked} className=\"checkbox\" id=\"checkbox-priority\" onKeyPress={this.enterPressed} />\r\n                                <label htmlFor=\"checkbox-priority\">important</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"newTaskBtn\" onClick={this.handleClick} >add task</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport '../css/Task.scss';\r\n\r\nconst Task = (props) => {\r\n\r\n    const importantStyle = {\r\n        color: 'rgb(206 4 4)',\r\n        fontWeight: 'bold',\r\n    }\r\n    const doneStyle = {\r\n        textDecoration: 'line-through'\r\n    }\r\n\r\n\r\n\r\n    const { id, text, deadline, important, active } = props.task;\r\n\r\n    if (active) {\r\n        return (\r\n            <div className=\"task\">\r\n                <p style={important ? importantStyle : null}>{text}</p>\r\n                <p style={active ? null : doneStyle}>{deadline}</p>\r\n                <button onClick={() => props.done(id)} >done</button>\r\n                <button onClick={() => props.delete(id)} >delete</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"task\">\r\n                <p style={active ? null : doneStyle}>{text}</p>\r\n                <p style={active ? null : doneStyle}>deadline {deadline}</p>\r\n                <button onClick={() => props.delete(id)} >delete</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport '../css/TasksList.scss';\r\nimport Task from './Task';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faSort } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TasksList = (props) => {\r\n    const tasks = props.tasks\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    const activeList = active.map(task => {\r\n        return (\r\n            <Task key={task.id} task={task} delete={props.delete} done={props.done} />\r\n        )\r\n    })\r\n\r\n    const doneList = done.map(task => {\r\n        return (\r\n            <Task key={task.id} task={task} delete={props.delete} done={props.done} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {activeList.length > 0 ? <h2>active tasks</h2> : null}\r\n                {activeList.length > 0 ? (\r\n                    <div className=\"tasksList\">\r\n                        <div className=\"bar\">\r\n                            <p>task</p>\r\n                            <p>deadline</p>\r\n                            <button><FontAwesomeIcon icon={faSort} size=\"sm\" /> sort</button>\r\n                            <button><FontAwesomeIcon icon={faSearch} size=\"xs\" /> search</button>\r\n                        </div>\r\n                    </div>\r\n                ) : null\r\n                }\r\n                {activeList.length > 0 ? activeList : <p>nothing to do</p>}\r\n            </div>\r\n\r\n            <div className=\"tasksList\">\r\n                {doneList.length > 0 ? <h2>done tasks</h2> : null}\r\n                {doneList}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TasksList;","import React, { Component } from 'react';\r\nimport AddTask from './AddTask';\r\nimport TasksList from './TasksList';\r\nimport '../css/HomePage.scss';\r\n\r\nclass HomePage extends Component {\r\n    counter = 3;\r\n    state = {\r\n        tasks: [\r\n        ]\r\n    }\r\n\r\n    addTask = (text, deadline, important) => {\r\n        const task = {\r\n            id: this.counter,\r\n            text: text,\r\n            deadline: deadline,\r\n            important: important,\r\n            active: true\r\n        }\r\n        this.counter++;\r\n        this.setState((prevState) => ({\r\n            tasks: [...prevState.tasks, task]\r\n        }))\r\n\r\n        return true;\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        let tasks = [...this.state.tasks];\r\n        tasks = tasks.filter(task => task.id !== id)\r\n        this.setState({\r\n            tasks\r\n        })\r\n    }\r\n\r\n    doneTask = (id) => {\r\n        console.log(\"change w stanie elementu o id \" + id);\r\n\r\n        const tasks = [...this.state.tasks];\r\n        tasks.forEach(task => {\r\n            if (task.id === id) {\r\n                task.active = false;\r\n            }\r\n        })\r\n        this.setState({\r\n            tasks\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"mainWrap\">\r\n                    <h1>another to do app</h1>\r\n                    <AddTask add={this.addTask} />\r\n\r\n                    <TasksList tasks={this.state.tasks} delete={this.deleteTask} done={this.doneTask} />\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}